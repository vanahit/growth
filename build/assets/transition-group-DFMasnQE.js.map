{"version":3,"file":"transition-group-DFMasnQE.js","sources":["../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../node_modules/dom-helpers/esm/removeClass.js","../../node_modules/react-transition-group/esm/config.js","../../node_modules/react-transition-group/esm/TransitionGroupContext.js","../../node_modules/react-transition-group/esm/utils/reflow.js","../../node_modules/react-transition-group/esm/Transition.js","../../node_modules/react-transition-group/esm/CSSTransition.js","../../node_modules/dom-helpers/esm/addClass.js","../../node_modules/dom-helpers/esm/hasClass.js","../../node_modules/react-transition-group/esm/utils/ChildMapping.js","../../node_modules/react-transition-group/esm/TransitionGroup.js","../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","includes","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","o","prototype","create","constructor","replaceClassName","origClass","classToRemove","replace","RegExp","config","TransitionGroupContext","React","createContext","forceReflow","node","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","mounting","nodeRef","current","ReactDOM","findDOMNode","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","createElement","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","removeClass","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","indexOf","_this$appliedClasses$","base","done","getChildMapping","mapFn","result","map","child","key","isValidElement","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","keys","hasPrev","hasNext","prevChild","isLeaving","values","obj","k","TransitionGroup","handleExited","ReferenceError","contextValue","firstRender","mounted","currentChildMapping","component","childFactory"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}