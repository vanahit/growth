{"version":3,"file":"index-Cd3y5Wp5.js","sources":["../../src/pages/Users/DeleteUser/index.tsx"],"sourcesContent":["import {useDeleteUserMutation} from \"redux/apiSlices/users.slice.ts\";\nimport React, {FC} from \"react\";\nimport {IDeleteUser} from \"./DeleteUser.types.ts\";\n\nexport const DeleteUser:FC<IDeleteUser> = ({children, onSuccess, id}) => {\n    const [deleteUser, {isLoading}] = useDeleteUserMutation();\n    const onDelete = async () => {\n        try {\n           await deleteUser(id).unwrap();\n           if (onSuccess) onSuccess();\n        } catch (err) {\n           console.error(err);\n        }\n\n    }\n    const clonedChildren = React.cloneElement(children, {onClick: onDelete, className: 'pointer', loading: isLoading});\n    return (\n        <>{ clonedChildren }</>\n    );\n};\n\nexport default DeleteUser;"],"names":["DeleteUser","children","onSuccess","id","i","deleteUser","isLoading","useDeleteUserMutation","clonedChildren","React","cloneElement","onClick","async","unwrap","err","className","loading"],"mappings":"yQAIO,MAAMA,EAA6B,EAAEC,SAAUC,EAAAA,UAAAA,EAAWC,GAC7DC,CAAA,IAAA,CAAA,KAAA,CAAOC,EAAYC,CAAAA,UAACA,IAAcC,EAU5BC,EAAAA,EAAiBC,EAAMC,aAAaT,EAAU,CAACU,QATpCC,SACT,CAAA,GAAA,CAAA,MACKP,EAAWF,CAAIU,EAAAA,OAAAA,EACjBX,GAAqBA,SACnBY,CAET,CAGoEC,EAAAA,UAAW,UAAWC,QAASV,CAAAA,CAAAA,EACvG,yBACQL,SAAgBO,CAAA,CAAA,CAAA"}